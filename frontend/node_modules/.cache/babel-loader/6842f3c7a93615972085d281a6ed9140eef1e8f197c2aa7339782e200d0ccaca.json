{"ast":null,"code":"var _jsxFileName = \"/Users/ha/Desktop/lang/fastapi_rag/frontend/src/components/IndicesBar.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport * as tw from '../css/IndicesBar.tw';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GROUP_SIZE = 5;\nconst TOTAL_COUNT = 30;\nconst INTERVAL_MS = 3000;\nconst IndicesBar = () => {\n  _s();\n  const [indices, setIndices] = useState([]);\n  const [groupIdx, setGroupIdx] = useState(0);\n  const intervalRef = useRef(null);\n  useEffect(() => {\n    fetch('/api/indices').then(res => res.json()).then(data => setIndices(Array.isArray(data.movers) ? data.movers : []));\n  }, []);\n  useEffect(() => {\n    if (indices.length === 0) return;\n    intervalRef.current = setInterval(() => {\n      setGroupIdx(idx => (idx + 1) % Math.ceil(indices.length / GROUP_SIZE));\n    }, INTERVAL_MS);\n    return () => {\n      if (intervalRef.current) clearInterval(intervalRef.current);\n    };\n  }, [indices]);\n\n  // movers 전체를 한 번에 보여주도록 수정\n  const currentGroup = indices;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: tw.indicesBar,\n    children: currentGroup.map(idx => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: tw.indexItem,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: tw.indexName,\n        children: idx.ticker\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: idx.change && idx.change.startsWith('+') ? tw.indexChangeUp : tw.indexChangeDown,\n        children: idx.change\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this)]\n    }, idx.ticker, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(IndicesBar, \"ji3SFOrD2+QQOrLAl9Z3plzE7so=\");\n_c = IndicesBar;\nexport default IndicesBar;\nvar _c;\n$RefreshReg$(_c, \"IndicesBar\");","map":{"version":3,"names":["React","useEffect","useState","useRef","tw","jsxDEV","_jsxDEV","GROUP_SIZE","TOTAL_COUNT","INTERVAL_MS","IndicesBar","_s","indices","setIndices","groupIdx","setGroupIdx","intervalRef","fetch","then","res","json","data","Array","isArray","movers","length","current","setInterval","idx","Math","ceil","clearInterval","currentGroup","className","indicesBar","children","map","indexItem","indexName","ticker","fileName","_jsxFileName","lineNumber","columnNumber","change","startsWith","indexChangeUp","indexChangeDown","_c","$RefreshReg$"],"sources":["/Users/ha/Desktop/lang/fastapi_rag/frontend/src/components/IndicesBar.tsx"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport * as tw from '../css/IndicesBar.tw';\n\ninterface IndexData {\n  ticker: string;\n  change: string;\n}\n\nconst GROUP_SIZE = 5;\nconst TOTAL_COUNT = 30;\nconst INTERVAL_MS = 3000;\n\nconst IndicesBar: React.FC = () => {\n  const [indices, setIndices] = useState<IndexData[]>([]);\n  const [groupIdx, setGroupIdx] = useState(0);\n  const intervalRef = useRef<NodeJS.Timeout | null>(null);\n\n  useEffect(() => {\n    fetch('/api/indices')\n      .then(res => res.json())\n      .then(data => setIndices(Array.isArray(data.movers) ? data.movers : []));\n  }, []);\n\n  useEffect(() => {\n    if (indices.length === 0) return;\n    intervalRef.current = setInterval(() => {\n      setGroupIdx(idx => (idx + 1) % Math.ceil(indices.length / GROUP_SIZE));\n    }, INTERVAL_MS);\n    return () => {\n      if (intervalRef.current) clearInterval(intervalRef.current);\n    };\n  }, [indices]);\n\n  // movers 전체를 한 번에 보여주도록 수정\n  const currentGroup = indices;\n\n  return (\n    <div className={tw.indicesBar}>\n      {currentGroup.map(idx => (\n        <div className={tw.indexItem} key={idx.ticker}>\n          <span className={tw.indexName}>{idx.ticker}</span>\n          <span className={idx.change && idx.change.startsWith('+') ? tw.indexChangeUp : tw.indexChangeDown}>{idx.change}</span>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default IndicesBar;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAO,KAAKC,EAAE,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAO3C,MAAMC,UAAU,GAAG,CAAC;AACpB,MAAMC,WAAW,GAAG,EAAE;AACtB,MAAMC,WAAW,GAAG,IAAI;AAExB,MAAMC,UAAoB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAc,EAAE,CAAC;EACvD,MAAM,CAACY,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC;EAC3C,MAAMc,WAAW,GAAGb,MAAM,CAAwB,IAAI,CAAC;EAEvDF,SAAS,CAAC,MAAM;IACdgB,KAAK,CAAC,cAAc,CAAC,CAClBC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACvBF,IAAI,CAACG,IAAI,IAAIR,UAAU,CAACS,KAAK,CAACC,OAAO,CAACF,IAAI,CAACG,MAAM,CAAC,GAAGH,IAAI,CAACG,MAAM,GAAG,EAAE,CAAC,CAAC;EAC5E,CAAC,EAAE,EAAE,CAAC;EAENvB,SAAS,CAAC,MAAM;IACd,IAAIW,OAAO,CAACa,MAAM,KAAK,CAAC,EAAE;IAC1BT,WAAW,CAACU,OAAO,GAAGC,WAAW,CAAC,MAAM;MACtCZ,WAAW,CAACa,GAAG,IAAI,CAACA,GAAG,GAAG,CAAC,IAAIC,IAAI,CAACC,IAAI,CAAClB,OAAO,CAACa,MAAM,GAAGlB,UAAU,CAAC,CAAC;IACxE,CAAC,EAAEE,WAAW,CAAC;IACf,OAAO,MAAM;MACX,IAAIO,WAAW,CAACU,OAAO,EAAEK,aAAa,CAACf,WAAW,CAACU,OAAO,CAAC;IAC7D,CAAC;EACH,CAAC,EAAE,CAACd,OAAO,CAAC,CAAC;;EAEb;EACA,MAAMoB,YAAY,GAAGpB,OAAO;EAE5B,oBACEN,OAAA;IAAK2B,SAAS,EAAE7B,EAAE,CAAC8B,UAAW;IAAAC,QAAA,EAC3BH,YAAY,CAACI,GAAG,CAACR,GAAG,iBACnBtB,OAAA;MAAK2B,SAAS,EAAE7B,EAAE,CAACiC,SAAU;MAAAF,QAAA,gBAC3B7B,OAAA;QAAM2B,SAAS,EAAE7B,EAAE,CAACkC,SAAU;QAAAH,QAAA,EAAEP,GAAG,CAACW;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAClDrC,OAAA;QAAM2B,SAAS,EAAEL,GAAG,CAACgB,MAAM,IAAIhB,GAAG,CAACgB,MAAM,CAACC,UAAU,CAAC,GAAG,CAAC,GAAGzC,EAAE,CAAC0C,aAAa,GAAG1C,EAAE,CAAC2C,eAAgB;QAAAZ,QAAA,EAAEP,GAAG,CAACgB;MAAM;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC;IAAA,GAFrFf,GAAG,CAACW,MAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGxC,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAChC,EAAA,CAlCID,UAAoB;AAAAsC,EAAA,GAApBtC,UAAoB;AAoC1B,eAAeA,UAAU;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}