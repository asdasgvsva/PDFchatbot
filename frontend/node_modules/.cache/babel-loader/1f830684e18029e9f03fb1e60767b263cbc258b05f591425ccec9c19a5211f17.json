{"ast":null,"code":"var _jsxFileName = \"/Users/ha/Desktop/lang/fastapi_rag/frontend/src/components/Chatbot.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport '../css/Chatbot.tw.ts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chatbot = () => {\n  _s();\n  const [messages, setMessages] = useState([{\n    from: 'bot',\n    text: '안녕하세요! 궁금한 점을 물어보세요.'\n  }, {\n    from: 'bot',\n    text: '=================================='\n  }, {\n    from: 'bot',\n    text: 'ex)BioTech Inc에 대한 최근 뉴스 3건 요약해줘\\n'\n  }, {\n    from: 'bot',\n    text: 'ex)Russell 2000에 포함된 반도체 제조 기업들을 알려줘.'\n  }]);\n  const [input, setInput] = useState('');\n  const messagesEndRef = useRef(null);\n  const [loading, setLoading] = useState(false);\n  const sendMessage = async () => {\n    if (!input.trim()) return;\n    setMessages([...messages, {\n      from: 'user',\n      text: input\n    }]);\n    setLoading(true);\n    const userInput = input;\n    setInput('');\n    try {\n      const res = await fetch('/api/chat', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          message: userInput\n        })\n      });\n      const data = await res.json();\n      setMessages(msgs => [...msgs, {\n        from: 'bot',\n        text: data.answer\n      }]);\n    } catch (e) {\n      setMessages(msgs => [...msgs, {\n        from: 'bot',\n        text: '오류가 발생했습니다.'\n      }]);\n    }\n    setLoading(false);\n  };\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, [messages]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"chatbot-header\",\n      children: \"\\uCC57\\uBD07\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbot-messages\",\n      children: [messages.map((msg, idx) => {\n        const isExample = msg.text.trim().startsWith('ex)');\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: msg.from === 'user' ? 'chatbot-message user' : isExample ? 'chatbot-message bot example' : 'chatbot-message bot',\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"chatbot-bubble\",\n            children: msg.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this)\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"chatbot-input-area\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: input,\n        onChange: e => setInput(e.target.value),\n        onKeyDown: e => e.key === 'Enter' && sendMessage(),\n        placeholder: \"\\uBA54\\uC2DC\\uC9C0\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694\",\n        className: \"chatbot-input\",\n        disabled: loading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"chatbot-send-btn\",\n        type: \"submit\",\n        disabled: loading,\n        children: \"\\uC804\\uC1A1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(Chatbot, \"f6e1fz3n4VizRUi7X7oK3HCG7cI=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","Chatbot","_s","messages","setMessages","from","text","input","setInput","messagesEndRef","loading","setLoading","sendMessage","trim","userInput","res","fetch","method","headers","body","JSON","stringify","message","data","json","msgs","answer","e","_messagesEndRef$curre","current","scrollIntoView","behavior","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","idx","isExample","startsWith","ref","value","onChange","target","onKeyDown","key","placeholder","disabled","type","_c","$RefreshReg$"],"sources":["/Users/ha/Desktop/lang/fastapi_rag/frontend/src/components/Chatbot.tsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport '../css/Chatbot.tw.ts';\n\ninterface Message {\n  from: 'user' | 'bot';\n  text: string;\n}\n\nconst Chatbot: React.FC = () => {\n  const [messages, setMessages] = useState<Message[]>([\n    { from: 'bot', text: '안녕하세요! 궁금한 점을 물어보세요.' },\n    { from: 'bot', text: '==================================' },\n    { from: 'bot', text: 'ex)BioTech Inc에 대한 최근 뉴스 3건 요약해줘\\n' },\n    { from: 'bot', text: 'ex)Russell 2000에 포함된 반도체 제조 기업들을 알려줘.' },\n  ]);\n  const [input, setInput] = useState('');\n  const messagesEndRef = useRef<HTMLDivElement>(null);\n  const [loading, setLoading] = useState(false);\n\n  const sendMessage = async () => {\n    if (!input.trim()) return;\n    setMessages([...messages, { from: 'user', text: input }]);\n    setLoading(true);\n    const userInput = input;\n    setInput('');\n    try {\n      const res = await fetch('/api/chat', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ message: userInput })\n      });\n      const data = await res.json();\n      setMessages(msgs => [...msgs, { from: 'bot', text: data.answer }]);\n    } catch (e) {\n      setMessages(msgs => [...msgs, { from: 'bot', text: '오류가 발생했습니다.' }]);\n    }\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  }, [messages]);\n\n  return (\n    <div className=\"chatbot-container\">\n      <h2 className=\"chatbot-header\">챗봇</h2>\n      <div className=\"chatbot-messages\">\n        {messages.map((msg, idx) => {\n          const isExample = msg.text.trim().startsWith('ex)');\n          return (\n            <div\n              key={idx}\n              className={\n                msg.from === 'user'\n                  ? 'chatbot-message user'\n                  : isExample\n                    ? 'chatbot-message bot example'\n                    : 'chatbot-message bot'\n              }\n            >\n              <span className=\"chatbot-bubble\">{msg.text}</span>\n            </div>\n          );\n        })}\n        <div ref={messagesEndRef} />\n      </div>\n      <form className=\"chatbot-input-area\">\n        <input\n          value={input}\n          onChange={e => setInput(e.target.value)}\n          onKeyDown={e => e.key === 'Enter' && sendMessage()}\n          placeholder=\"메시지를 입력하세요\"\n          className=\"chatbot-input\"\n          disabled={loading}\n        />\n        <button className=\"chatbot-send-btn\" type=\"submit\" disabled={loading}>전송</button>\n      </form>\n    </div>\n  );\n};\n\nexport default Chatbot; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}